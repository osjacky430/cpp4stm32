macro(import_board_setting target_board)
  set(SUPPORTED_BOARD_LIST stm32f446re stm32f303k8 stm32l432kc stm32f746ng)

  list(FIND SUPPORTED_BOARD_LIST ${target_board} out)
  if(${out} EQUAL -1)
    message(FATAL_ERROR "Target board ${target_board} is not supported yet by the driver!")
  else()
    include(${CMAKE_SOURCE_DIR}/board/${target_board}.in)
  endif()
endmacro()

function(check_config_file)
  set(option_value OVERWRITE)
  set(single_value_arg BOARD FILE_DIR)
  set(multi_value_arg)
  cmake_parse_arguments(CONFIG "${option_value}" "${single_value_arg}" "${multi_value_arg}" ${ARGN})

  if(NOT ${CONFIG_BOARD} STREQUAL "" AND NOT ${CONFIG_FILE_DIR} STREQUAL "") 
    import_board_setting(${CONFIG_BOARD})
    if(NOT EXISTS ${CONFIG_FILE_DIR}/sys_info.hpp)
       message(STATUS "Missing sys_info.hpp in ${CONFIG_FILE_DIR}, creating one with default configuration")
       file(WRITE ${CONFIG_FILE_DIR}/sys_info.hpp ${DEFAULT_SYS_CONFIG_FILE})
     elseif(${CONFIG_OVERWRITE})
       message(STATUS "Overwriting sys_info.hpp in ${CONFIG_FILE_DIR}")
       file(WRITE ${CONFIG_FILE_DIR}/sys_info.hpp ${DEFAULT_SYS_CONFIG_FILE})
    endif() 
  endif()
endfunction()

function(is_periph_supported target_board target_periph result)
  import_board_setting(${target_board})
  string(TOLOWER ${target_periph} ${target_periph})

  set(REGISTER_HEADER ${TARGET_DIR}/register/${target_periph}.hxx)
  set(API_HEADER ${TARGET_DIR}/register/${target_periph}.hxx)

  if (NOT EXISTS ${REGISTER_HEADER} OR NOT EXISTS ${API_HEADER}) 
    set(${result} FALSE PARENT_SCOPE)
  else()
    set(${result} TRUE PARENT_SCOPE)
  endif()
endfunction()
